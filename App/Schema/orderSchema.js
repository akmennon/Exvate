db.createCollection("orders",{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            additionalProperties:false,
            required:["workId"],
            properties:{
                workId:{           
                    bsonType:"object",
                    required:["_id","title"],
                    additionalProperties:false,
                    properties:{
                        _id:{
                            bsonType:"objectId"
                        },
                        title:{
                            bsonType:"string",
                            maxLength:40,
                            minLength:2
                        }
                    }
                },
                userId:{
                    bsonType:"object",
                    additionalProperties:false,
                    required:["_id","name","email"],
                    properties:{
                        _id:{
                            bsonType:"objectId"
                        },
                        name:{
                            bsonType:"string",
                            maxLength:30,
                            minLength:3
                        },
                        email:{
                            bsonType:"object",
                            additionalProperties:false,
                            required:["email"],
                            properties:{
                                email:{
                                    bsonType:"string"
                                },
                                confirmed:{
                                    bsonType:"object",
                                    additionalProperties:false,
                                    properties:{
                                        token:{
                                            bsonType:"string"
                                        },
                                        value:{
                                            bsonType:"bool"
                                        }
                                    }
                                }
                            }
                        },
                        mobile:{
                            bsonType:"string",
                            maxLength:20
                        }
                    }
                },
                values:{
                    bsonType:"object",
                    additionalProperties:false,
                    properties:{
                        price:{
                            bsonType:"double"
                        },
                        amount:{
                            bsonType:"double"
                        },
                        time:{
                            bsonType:"double"
                        },
                        instructions:{
                            bsonType:"string"
                        },
                        uploads:{
                            bsonType:"array",
                            additionalItems:false,
                            items:{
                                bsonType:"string"
                            }
                        },
                        variables:{
                            bsonType:"array",
                            additionalItems:false,
                            items:{
                                title:{
                                    bsonType:"string",
                                    maxLength:"256"
                                },
                                value:{
                                    bsonType:"double"
                                },
                                unit:{
                                    bsonType:"string",
                                    maxLength:"256"
                                },
                                tierType:{
                                    bsonType:"bool"
                                },
                                label:{
                                    bsonType:"string",
                                    maxLength:"256"
                                }
                            }
                        }
                    }
                },
                address:{
                    bsonType:"object",
                    additionalProperties:false,
                    properties:{
                        name:{
                            bsonType:"string",
                            maxLength:40,
                            minLength:3
                        },
                        street:{
                            bsonType:"string",
                            maxLength:32,
                            minLength:2
                        },
                        city:{
                            bsonType:"string",
                            maxLength:30,
                            minLength:2
                        },
                        state:{
                            bsonType:"string",
                            maxLength:30,
                            minLength:2
                        },
                        country:{
                            bsonType:"string",
                            maxLength:30,
                            minLength:2
                        },
                        pin:{
                            bsonType:"string",
                            maxLength:30,
                            minLength:2
                        }
                    }
                },
                billingAddress:{
                    bsonType:"object",
                    additionalProperties:false,
                    properties:{
                        name:{
                            bsonType:"string",
                            maxLength:40,
                            minLength:3
                        },
                        street:{
                            bsonType:"string",
                            maxLength:32,
                            minLength:2
                        },
                        city:{
                            bsonType:"string",
                            maxLength:30,
                            minLength:2
                        },
                        state:{
                            bsonType:"string",
                            maxLength:30,
                            minLength:2
                        },
                        country:{
                            bsonType:"string",
                            maxLength:30,
                            minLength:2
                        },
                        pin:{
                            bsonType:"string",
                            maxLength:30,
                            minLength:2
                        }
                    }
                },
                supplier:{
                    bsonType:"object",
                    additionalProperties:false,
                    properties:{
                        assigned:{
                            bsonType:"array",
                            items:{
                                bsonType:"objectId"
                            },
                            additionalItems:false
                        },
                        removed:{
                            bsonType:"array",
                            items:{
                                bsonType:"objectId"
                            },
                            additionalItems:false
                        }
                    }
                },
                biddingStatus:{
                    enum:["Open","Closed"]
                },
                biddingDuration:{
                    bsonType:"date"
                },
                affiliate:{
                    bsonType:"objectId"
                },
                orderType:{
                    enum:["Order","Sample"]
                },
                incoterm:{
                    enum:["CIF","FOB",'FCA','FAS','CFR','CIP','CPT','DAP','DDP','Exworks','Domestic']
                },
                status:{
                    enum:['Draft','Pending','Sampling','Active','Transit','Completed','Finished','Cancelled','Failed']
                },
                shipmentDetails:{
                    bsonType:"object",
                    additionalProperties:false,
                    properties:{
                        shipmentType:{
                            enum:["Cargo","Courier"]
                        },
                        port:{
                            bsonType:"string",
                            maxLength:100,
                            minLength:2
                        },
                        consignmentId:{
                            bsonType:"string",
                            maxLength:100,
                            minLength:2
                        },
                        serviceProvider:{
                            bsonType:"string",
                            maxLength:100,
                            minLength:2
                        },
                        statusLink:{
                            bsonType:"string",
                            maxLength:256,
                            minLength:2
                        },
                        CHA:{
                            bsonType:"string",
                            maxLength:100,
                            minLength:2
                        }
                    }
                },
                completionVerified:{
                    bsonType:"array",
                    additionalItems:false,
                    items:{
                        verifiedBy:{
                            bsonType:"objectId"
                        },
                        verifiedAt:{
                            bsonType:"date"
                        }
                    }
                },
                cancelVerified:{
                    bsonType:"array",
                    additionalItems:false,
                    items:{
                        verifiedBy:{
                            bsonType:"objectId"
                        },
                        verifiedAt:{
                            bsonType:"date"
                        }
                    }
                },
                paymentStatus:{
                    bsonType:"object",
                    additionalProperties:false,
                    properties:{
                        value:{
                            enum:['Pending','Completed','Failed','Contract','Finished','Refunded','Cancelled']
                        },
                        supplierPayment:{
                            enum:['Pending','Completed','Failed','Contract','Finished','Refunded','Cancelled']
                        },
                        supplierAmount:{
                            bsonType:"double"
                        },
                        supplierAmountPaid:{
                            bsonType:"double"
                        },
                        transaction:{
                            bsonType:"array",
                            additionalItems:false,
                            items:{
                                info:{
                                    enum:['Advance','Advance/LC','LC','Finished']
                                },
                                status:{
                                    enum:['Successful','Failed']
                                },
                                paymentType:{
                                    bsonType:"string"
                                },
                                createdAt:{
                                    bsonType:"date"
                                },
                                createdBy:{
                                    bsonType:"objectId"
                                },
                                advancePercent:{
                                    bsonType:"double",
                                    minimum:1,
                                    maximum:99
                                }
                            }
                        }
                    }
                },
                pl:{
                    currentPL:{
                        type:Number
                    },
                    totalPL:{
                        type:Number
                    },
                    currentPayment:{
                        type:Number
                    },
                    advancePercent:{
                        type:Number
                    },
                    charges:[
                        {
                            chargeType:{
                                type:String,
                                validate:{
                                    validator:function(val){
                                        switch(val){
                                            case 'Shipping':
                                                return true
                                            case 'Insurance':
                                                return true
                                            case 'Inspection':
                                                return true
                                            case 'Sourcing':
                                                return true
                                            case 'Return':
                                                return true
                                            case 'Other':
                                                return true
                                            default:
                                                return false
                                        }
                                    },
                                    message:function(){
                                        return 'Invalid charge type'
                                    }
                                }
                            },
                            otherDetails:{
                                type:String,
                                maxlength:40
                            },
                            entity:{
                                type:String,
                                validate:{
                                    validator:function(val){
                                        switch(val){
                                            case 'Bank':
                                                return true
                                            case 'Company':
                                                return true
                                            case 'Gov':
                                                return true
                                            default:
                                                return false
                                        }
                                    },
                                    message:function(){
                                        return 'Invalid entity type'
                                    }
                                }
                            },
                            entityName:{
                                type:String,
                                maxlength:40
                            },
                            price:{
                                type:Number,
                                min:0
                            },
                            contactName:{
                                type:String,
                                maxlength:40
                            },
                            contactNumber:{
                                type:String,
                                minlength:6,
                                maxlength:20
                            },
                            transactionId:{
                                type:String,
                                maxlength:120,
                                minlength:3
                            },
                            paymentDate:{
                                type:Date
                            },
                            paymentMethod:{
                                type:String,
                                validate:{
                                    validator:function(val){
                                        switch(val){
                                            case 'Online Transfer':
                                                return true
                                            case 'Cash Payment':
                                                return true
                                            case 'LC':
                                                return true
                                            default:
                                                return false
                                        }
                                    },
                                    message:function(){
                                        return 'Invalid payment method'
                                    }
                                }  
                            },
                            createdAt:{
                                type:Date,
                                default:Date.now
                            }
                        }
                    ]
                },
                result:{
                    values:[{
                        type:Number
                    }],
                    time:{
                        values:[{
                            type:Number
                        }],
                        calc:[{
                            method:{
                                type:String
                            },
                            keys:[{type:Number}],
                            calcValues:[{type:Number}]  
                        }]
                    },
                    calc:[
                        {
                            method:{
                                type:String
                            },
                            keys:[{type:Number}],
                            calcValues:[{type:Number}]
                        }
                    ]
                },
                verified:{
                    value:{
                        type:Boolean,
                        default:false
                    },
                    verifiedBy:[{
                        value:{
                            type:Schema.Types.ObjectId
                        },
                        createdAt:{
                            type:Date,
                            default:Date.now
                        }
                    }],
                },
                createdAt:{
                    type:Date,
                    default: Date.now
                },
                deadline:{
                    type:Date
                },
                validTill:{
                    type:Date
                }
            }
        }
    }
})